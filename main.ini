#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "DHT.h"

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// Sensor pins
#define SOIL_PIN 4
#define DHTPIN 15
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// LED pin
#define LED_PIN 14

// Timing and state tracking
bool moistureWasDry = false;       // whether the dry notification has been triggered
bool ledOn = false;                // whether LED is currently on
unsigned long dryStartTime = 0;    // when dry condition began
unsigned long ledStartTime = 0;    // when LED turned on

const unsigned long dryDebounce = 5000;   // Must be dry for 5 seconds to count
const unsigned long ledDuration = 5000;   // LED stays on for 5 seconds
const int highSidePin = 18;  // Controls BD140 (PNP)
const int lowSidePin = 19;   // Controls IRF510 (N-MOSFET)

void setup() {
  Serial.begin(9600);
  Wire.begin(21, 22); // ESP32 I2C pins

  pinMode(highSidePin, OUTPUT);
  pinMode(lowSidePin, OUTPUT);

  // 

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("OLED init failed"));
    while (true);
  }

  dht.begin();
  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW);

  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.println("System Ready...");
  display.display();
  delay(2000);
}

void loop() {
  int moisture = analogRead(SOIL_PIN);
  float temp = dht.readTemperature();
  float humidity = dht.readHumidity();
  unsigned long now = millis();

  Serial.print("Soil: ");
  Serial.print(moisture);
  Serial.print(" | Temp: ");
  Serial.print(temp);
  Serial.print("C | Humidity: ");
  Serial.print(humidity);
  Serial.println("%");

  // --- Dry soil detection with debounce ---
  if (moisture >= 4000 && !moistureWasDry && !ledOn) {
    // Start dry timer if not already started
    if (dryStartTime == 0) {
      dryStartTime = now;
    } else if (now - dryStartTime >= dryDebounce) {
      // Soil has been dry for 5 sec → Trigger notification
      digitalWrite(LED_PIN, HIGH);
      digitalWrite(highSidePin, LOW);   // PNP ON (base pulled low)
      digitalWrite(lowSidePin, LOW);    // MOSFET OFF
      delay(2000);  // Run motor for 2 seconds

      ledOn = true;
      ledStartTime = now;
      moistureWasDry = true; // block further notifications until reset
      Serial.println("Dry soil confirmed → LED on.");
    }
  } else if (moisture < 4000) {
    // Moisture detected → reset everything
    dryStartTime = 0;
    moistureWasDry = false;
    Serial.println("Moisture detected → system reset.");
  } else if (moisture >= 4000 && moistureWasDry) {
    // Still dry, but already triggered → do nothing
    dryStartTime = 0;
  }

  // --- LED auto turn off after duration ---
  if (ledOn && now - ledStartTime >= ledDuration) {
    digitalWrite(LED_PIN, LOW);
    ledOn = false;
    Serial.println("LED auto-off after 5 seconds.");
    digitalWrite(highSidePin, HIGH);   // PNP ON (base pulled low)
    digitalWrite(lowSidePin, LOW);    // MOSFET OFF
    

  }

  // --- OLED Display ---
  display.clearDisplay();
  display.setTextSize(4);
  display.setCursor(10, 0);
  display.println(moisture < 4000 ? ":)" : ":(");

  display.setTextSize(1);
  display.setCursor(0, 48);
  display.print("T:");
  display.print(temp);
  display.print("C H:");
  display.print(humidity);
  display.println("%");

  display.display();
  delay(300);
}
